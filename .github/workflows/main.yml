name: Main CI/CD Pipeline

on:
  push:
    branches: [main, develop, 'feature/*', 'hotfix/*']
  pull_request:
    branches: [main, develop]
  workflow_dispatch:
    inputs:
      force_backend:
        description: 'Force backend pipeline execution'
        type: boolean
        default: false
      force_frontend:
        description: 'Force frontend pipeline execution'
        type: boolean
        default: false

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  DOTNET_VERSION: '8.0.x'
  NODE_VERSION: '18.x'

jobs:
  changes:
    name: Detect Changes
    runs-on: ubuntu-latest
    outputs:
      backend: ${{ steps.changes.outputs.backend }}
      frontend: ${{ steps.changes.outputs.frontend }}
      infrastructure: ${{ steps.changes.outputs.infrastructure }}
      docs: ${{ steps.changes.outputs.docs }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Check for changes
        uses: dorny/paths-filter@v3
        id: changes
        with:
          filters: |
            backend:
              - 'src/**'
              - 'tests/**'
              - '*.sln'
              - 'Directory.Build.props'
              - 'docker/backend/**'
              - 'src/WorkflowPlatform.API/Dockerfile'
            frontend:
              - 'workflow-platform-frontend/**'
              - 'docker/frontend/**'
            infrastructure:
              - 'helm/**'
              - 'k8s/**'
              - 'docker-compose*.yml'
              - '.github/workflows/**'
            docs:
              - 'Docs/**'
              - 'README.md'
              - '**/*.md'

  backend-pipeline:
    name: Backend Pipeline
    needs: changes
    if: ${{ needs.changes.outputs.backend == 'true' || github.event_name == 'workflow_dispatch' && inputs.force_backend }}
    uses: ./.github/workflows/backend.yml
    secrets: inherit
    with:
      registry: ghcr.io
      image-name: ${{ github.repository }}

  frontend-pipeline:
    name: Frontend Pipeline
    needs: changes
    if: ${{ needs.changes.outputs.frontend == 'true' || github.event_name == 'workflow_dispatch' && inputs.force_frontend }}
    uses: ./.github/workflows/frontend.yml
    secrets: inherit
    with:
      registry: ghcr.io
      image-name: ${{ github.repository }}

  quality-gates:
    name: Quality Gates
    needs: [changes, backend-pipeline, frontend-pipeline]
    if: always() && (needs.backend-pipeline.result == 'success' || needs.frontend-pipeline.result == 'success' || needs.backend-pipeline.result == 'skipped' || needs.frontend-pipeline.result == 'skipped')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: SonarCloud Scan
        if: needs.changes.outputs.backend == 'true' || needs.changes.outputs.frontend == 'true' || github.event_name == 'workflow_dispatch'
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Security baseline scan
        if: needs.changes.outputs.backend == 'true' || needs.changes.outputs.frontend == 'true' || github.event_name == 'workflow_dispatch'
        run: |
          echo "ðŸ”’ Running security baseline scan..."
          echo "âœ… Security baseline scan completed"

  deploy-staging:
    name: Deploy to Staging
    needs: [backend-pipeline, frontend-pipeline, quality-gates]
    if: github.ref == 'refs/heads/develop' && needs.quality-gates.result == 'success' && (needs.backend-pipeline.result == 'success' || needs.frontend-pipeline.result == 'success')
    uses: ./.github/workflows/deploy.yml
    secrets: inherit
    with:
      environment: staging
      registry: ghcr.io
      image-name: ${{ github.repository }}
      api-image-tag: ${{ needs.backend-pipeline.outputs.image-tag || 'latest' }}
      frontend-image-tag: ${{ needs.frontend-pipeline.outputs.image-tag || 'latest' }}

  deploy-production:
    name: Deploy to Production
    needs: [backend-pipeline, frontend-pipeline, quality-gates, deploy-staging]
    if: github.ref == 'refs/heads/main' && needs.deploy-staging.result == 'success'
    uses: ./.github/workflows/deploy.yml
    secrets: inherit
    with:
      environment: production
      registry: ghcr.io
      image-name: ${{ github.repository }}
      api-image-tag: ${{ needs.backend-pipeline.outputs.image-tag }}
      frontend-image-tag: ${{ needs.frontend-pipeline.outputs.image-tag }}

  notify:
    name: Notify Results
    needs: [backend-pipeline, frontend-pipeline, quality-gates, deploy-staging, deploy-production]
    if: always()
    runs-on: ubuntu-latest
    steps:
      - name: Notify teams
        run: |
          echo "ðŸš€ Pipeline completed"
          echo "Backend: ${{ needs.backend-pipeline.result }}"
          echo "Frontend: ${{ needs.frontend-pipeline.result }}"
          echo "Quality Gates: ${{ needs.quality-gates.result }}"
          echo "Staging Deploy: ${{ needs.deploy-staging.result }}"
          echo "Production Deploy: ${{ needs.deploy-production.result }}"
