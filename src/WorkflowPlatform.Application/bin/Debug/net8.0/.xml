<?xml version="1.0"?>
<doc>
    <assembly>
        <name>WorkflowPlatform.Application</name>
    </assembly>
    <members>
        <member name="T:WorkflowPlatform.Application.Common.Interfaces.ICurrentUserService">
            <summary>
            Application service interface for the current user context.
            Provides access to current user information and claims.
            </summary>
        </member>
        <member name="P:WorkflowPlatform.Application.Common.Interfaces.ICurrentUserService.UserId">
            <summary>
            Gets the current user's unique identifier.
            </summary>
        </member>
        <member name="P:WorkflowPlatform.Application.Common.Interfaces.ICurrentUserService.UserName">
            <summary>
            Gets the current user's username.
            </summary>
        </member>
        <member name="P:WorkflowPlatform.Application.Common.Interfaces.ICurrentUserService.Email">
            <summary>
            Gets the current user's email address.
            </summary>
        </member>
        <member name="M:WorkflowPlatform.Application.Common.Interfaces.ICurrentUserService.HasPermission(System.String)">
            <summary>
            Checks if the current user has a specific permission.
            </summary>
            <param name="permission">The permission to check</param>
            <returns>True if the user has the permission, false otherwise</returns>
        </member>
        <member name="M:WorkflowPlatform.Application.Common.Interfaces.ICurrentUserService.IsInRole(System.String)">
            <summary>
            Checks if the current user is in a specific role.
            </summary>
            <param name="role">The role to check</param>
            <returns>True if the user is in the role, false otherwise</returns>
        </member>
        <member name="T:WorkflowPlatform.Application.Common.Interfaces.IDateTimeService">
            <summary>
            Application service interface for date/time operations.
            Provides testable date/time functionality.
            </summary>
        </member>
        <member name="P:WorkflowPlatform.Application.Common.Interfaces.IDateTimeService.UtcNow">
            <summary>
            Gets the current UTC date and time.
            </summary>
        </member>
        <member name="P:WorkflowPlatform.Application.Common.Interfaces.IDateTimeService.Now">
            <summary>
            Gets the current local date and time.
            </summary>
        </member>
        <member name="P:WorkflowPlatform.Application.Common.Interfaces.IDateTimeService.Today">
            <summary>
            Gets the current date (without time component).
            </summary>
        </member>
        <member name="T:WorkflowPlatform.Application.Common.Interfaces.INotificationService">
            <summary>
            Application service interface for email notifications.
            </summary>
        </member>
        <member name="M:WorkflowPlatform.Application.Common.Interfaces.INotificationService.SendEmailAsync(System.String,System.String,System.String,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Sends an email notification.
            </summary>
            <param name="to">Recipient email address</param>
            <param name="subject">Email subject</param>
            <param name="body">Email body</param>
            <param name="isHtml">Whether the body contains HTML</param>
            <param name="cancellationToken">Cancellation token</param>
        </member>
        <member name="M:WorkflowPlatform.Application.Common.Interfaces.INotificationService.SendWorkflowNotificationAsync(System.Guid,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Sends a notification about workflow execution completion.
            </summary>
            <param name="workflowId">The workflow identifier</param>
            <param name="executionStatus">The execution status</param>
            <param name="recipientEmail">Recipient email address</param>
            <param name="cancellationToken">Cancellation token</param>
        </member>
        <member name="T:WorkflowPlatform.Application.Common.Interfaces.IWorkflowRepository">
            <summary>
            Application layer interface for workflow-specific repository operations.
            This extends the domain repository interface with application-specific queries.
            </summary>
        </member>
        <member name="M:WorkflowPlatform.Application.Common.Interfaces.IWorkflowRepository.GetByNameAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets a workflow by its name.
            </summary>
            <param name="name">The workflow name</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>The workflow if found, null otherwise</returns>
        </member>
        <member name="M:WorkflowPlatform.Application.Common.Interfaces.IWorkflowRepository.GetActiveWorkflowsAsync(System.Threading.CancellationToken)">
            <summary>
            Gets all active workflows.
            </summary>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Collection of active workflows</returns>
        </member>
        <member name="M:WorkflowPlatform.Application.Common.Interfaces.IWorkflowRepository.GetByCreatorAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Gets workflows created by a specific user.
            </summary>
            <param name="createdBy">The user identifier</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Collection of workflows created by the user</returns>
        </member>
        <member name="M:WorkflowPlatform.Application.Common.Interfaces.IWorkflowRepository.GetPaginatedAsync(System.Int32,System.Int32,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets paginated workflows with filtering and sorting.
            </summary>
            <param name="pageSize">Number of workflows per page</param>
            <param name="pageNumber">Page number (1-based)</param>
            <param name="searchTerm">Optional search term for name/description</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Paginated result of workflows</returns>
        </member>
        <member name="T:WorkflowPlatform.Application.Workflows.Commands.CreateWorkflow.CreateWorkflowCommand">
            <summary>
            Command to create a new workflow definition.
            </summary>
        </member>
        <member name="T:WorkflowPlatform.Application.Workflows.Commands.CreateWorkflow.CreateWorkflowResult">
            <summary>
            Result of creating a new workflow.
            </summary>
        </member>
        <member name="T:WorkflowPlatform.Application.Workflows.Commands.CreateWorkflow.CreateWorkflowCommandHandler">
            <summary>
            Handler for CreateWorkflowCommand.
            Implements the business logic for creating new workflow definitions.
            </summary>
        </member>
        <member name="T:WorkflowPlatform.Application.Workflows.Commands.CreateWorkflow.CreateWorkflowCommandValidator">
            <summary>
            Validator for CreateWorkflowCommand.
            Implements comprehensive validation rules for workflow creation.
            </summary>
        </member>
    </members>
</doc>
